package com.ers.servlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.ers.pojos.Employee;
import com.ers.pojos.Requests;
import com.ers.service.Service;

/**
 * Servlet implementation class displayRequests
 */
@WebServlet("/displayRequests")
public class displayRequests extends HttpServlet 
{
	private static final long serialVersionUID = 1L;
    
	HttpSession sess;

    public displayRequests() 
    {

    }
    
    public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException {
        HttpServletRequest request = (HttpServletRequest) req;
        HttpServletResponse response = (HttpServletResponse) res;

        if (sess == null || sess.getAttribute("user") == null) {
            response.sendRedirect("index.ftl"); // No logged-in user found, so redirect to login page.
        } else {
            response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate"); // HTTP 1.1.
            response.setHeader("Pragma", "no-cache"); // HTTP 1.0.
            response.setDateHeader("Expires", 0);
            chain.doFilter(req, res);  
        }
    }


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		//gets seesion attribute from login page
		sess = request.getSession(true);
		Service s = new Service ();
		Employee e = (Employee)sess.getAttribute("user");
		
		ArrayList <Requests> rlist;
		

		//gets all requests if user is manager, gets the employees request if user is employee
		if(e.getIsManager() == 1)
		{
			rlist = s.getAllR();
		}
		else
		{
			rlist = s.getRequests(e);
		}
		
		//start json string	
		PrintWriter out = response.getWriter();
		String json = "{ \"demo\":[" ;
		
		//counter to add commas to all but last element
		int counter = 0;
		
		
		if(rlist.get(0).getRequestId() != 0)
		{
			//creates a json string for non empty array
			for(Requests r:rlist)
			{
				json += "[\" "+ r.getRequestId()+ "\",\""+r.getType().getName()+"\","+"\"$"+r.getAmount()+
						 "\",\""+r.getPurpose()+"\",\""+
						 s.displayEName(r.getReqester())+"\",\""+s.displayEName(r.getResolver())+"\",\""+r.getNote()+"\"]";
				
				
				
				//comma between elements
				if(counter != rlist.size()-1)
				{
					json += ",";
				}
				
				counter++;
			}
			
			//end of json and print
			json += "]}";
			out.println(json);
		}
		else
		{
			//creates an empty table if nothing is found
			json += "[\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \"]]}";
			out.println(json);
		}
		
	}

}
