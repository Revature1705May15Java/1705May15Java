package com.reim.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;


import com.reim.util.ConnectionFactory;
import com.bank.dao.DAO;
import com.bank.dao.DaoImpl;
import com.bank.pojos.Account;
import com.reim.pojos.Employee;
import com.reim.pojos.Request;

public class DaoImpl implements Dao {

	@Override
	public ArrayList<Request> findReqByEmpId(int emp_id) {
		 ArrayList<Request> requests = new ArrayList<Request>();
		 Dao dao = new DaoImpl();
		 Request acc = new Request();
	        try (Connection conn = ConnectionFactory.getInstance().getConnection()) {
	            String sql = " SELECT account.acc_id, account.balance, account.opened, account.closed, accounttype.t_id "+
                    " FROM user_account "+
                    " INNER JOIN users ON user_account.user_id = users.u_id "+
                    " INNER JOIN account ON user_account.account_id = account.acc_id "+
                    " INNER JOIN accounttype ON accounttype.t_id = account.type_id " +
                    " WHERE users.u_Id= ? ";
	            PreparedStatement ps = conn.prepareStatement(sql);
	            ps.setInt(1, UserId);

	            ResultSet rs = ps.executeQuery();
	            
	            while (rs.next()) {
	               
	            	acc.setId(rs.getInt(1));
	            	acc.setBalance(rs.getDouble(2));
	        
	                acc.setDateOpened(rs.getDate(3));
	        
	                        
	                acc.setDateClosed(rs.getDate(4));
	 
	                acc.setType(dao.getTypeName(rs.getInt(5)));
	     
	                        
	                accounts.add(acc);
	                acc = new Account();
	            }
	            logger.log("Retrieved all accounts by userid " + accounts.toString());
	            return accounts;

	        } catch (SQLException e) {
				// TODO Auto-generated catch block
	        	e.printStackTrace();
				logger.log(e.getSQLState());
	        }

	        return null;
	}

	
	//Find the employee by username
	@Override
	public Employee findEmpByUname(String uname) {
		// TODO Auto-generated method stub
		
		Employee temp = null;
		try(Connection connect = ConnectionFactory.getInstance().getConnection();){
			String sql = "select * from Employee where username = ?";
			PreparedStatement ps = connect.prepareStatement(sql);
			ps.setString(1, uname.toLowerCase());
			
			ResultSet emp = ps.executeQuery();
			//id, fn, ln, pw, uname
			temp = new Employee();
			
			//assigned each variable of an employee to temp
			while(emp.next()){
				temp.setEmployee_id(emp.getInt(1));
				temp.setFn(emp.getString(2));
				temp.setLn(emp.getString(3));
				temp.setUname(emp.getString(4));
				temp.setPw(emp.getString(5));
				temp.setIs_manager(emp.getInt(6));
				
			}
//			if(temp.getUname()!=null){
//			System.out.println("employee: " +temp.toString());
//			}
			return temp;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return temp;
		
	}
	
}
