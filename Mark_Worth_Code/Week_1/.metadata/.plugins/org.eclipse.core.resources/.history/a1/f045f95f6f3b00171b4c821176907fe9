
package com.google.challenges; 

public class Answer {   
	public static int numOfRoots=0;
    public static int[] answer(int area) {
    	
    	numberOfRoots(area);
    	int[] Solution=new int[numOfRoots];
    	double num2=area;
    	if(area>0){
    	for(int i=0;i<numOfRoots;i++){
        	boolean rootable=(Math.floor(Math.sqrt(num2))>1);
        	double root=Math.floor(Math.sqrt(num2));
        	if(rootable){
        		
        		int rootint=(int)root;
        		Solution[i]=rootint*rootint;
        		num2=num2-root*root;
        	}else if(root>=1){
        		Solution[i]=1;
        		num2=num2-1;
        	}
    	}
    	}
    	numOfRoots=0;
    	return Solution;
    	}
    	

    
    public static void numberOfRoots(int num){
    	double num2=num;
    	boolean rootable=(Math.floor(Math.sqrt(num2))>1);
    	if(rootable){
    		numOfRoots++;
    		System.out.println("rootable check");
    		numberOfRoots(num2-(int)Math.floor(Math.sqrt(num2)));
    	}else if(num>1){
    		System.out.println("is >1");
    		numOfRoots++;
    		numberOfRoots(num-1);
    	}else if(num==1){
    		System.out.println("is 1");
    		numOfRoots++;
    	}
    }
    public static void main(String[] args) {
    	int[] Solved=answer(34726);
    	for(int i=0;i<Solved.length;i++){
    		System.out.println(Solved[i]);
    	}
	}
}