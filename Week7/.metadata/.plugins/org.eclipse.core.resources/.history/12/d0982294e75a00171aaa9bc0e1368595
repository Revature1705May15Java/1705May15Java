<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Do something in the controller!</title>
<!-- To define a controller, it must be declared in two places:
1. in the HTML markup 
<div ng-conroller="MyController"

2. in javascript:
<script>
angular
.module("myApp")
.myController("MyController", function(depencency1, dependency,...){
//controller code goes here 
});;
</script>

OR

<script>
angular
.module("myApp")
.controller("MyController", MyController);

function MyController(depencency1, dependency2...){
//controller code here
}
</script>

-->

<script
	src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.3/angular.min.js"></script>
<script>
	angular.module("myApp", []).controller("MyController", function($scope) {
		$scope.firstName = "Genesis";
		$scope.lastName = "Bonds";
		$scope.getFullName = function() {
			return $scope.firstName + " " + $scope.lastName;
		}
	});
</script>

</head>
<body ng-app="myApp">

	<div ng-controller="MyController">
		First Name: <input type="text" ng-model="firstName" /> </br>
		Last Name: <input type="text" ng-model="lastName" /> </br>

		<h2>Hey {{getFullName() | uppercase}}</h2>

	</div>

</body>
</html>

<!-- 
Developer Tips for Controllers:
- do not manipulate the DOM in your controllers, this will make 
controllers more difficult to test and will violate the 
separation of concerns principles. use directives instead
- controllers should not be defined as globals - even though 
its allowed, it is a bad practice to pollute the global namespace
- controllers are plain JS constructors, so name them using UpperCamelCase
- make the controllers as lean as possible, ie abstract commonly used 
functions into a service

 -->