<!DOCTYPE html>
<html ng-app="todoApp">
<head>
<meta charset="ISO-8859-1">
<script
	src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.3/angular.min.js"></script>

<script>
	var model = {
		user : "Adam",
		items : [ {
			action : "Buy Flowers",
			done : false
		}, {
			action : "Get Shoes",
			done : false
		}, {
			action : "Collect Tickets",
			done : false
		}, {
			action : "Call Joe",
			done : false
		} ]
	};
	var todoApp = angular.module("todoApp", []);
	
	todoApp.filter("checkedItems",funtion(){
		return funtion(items, showComplete){
		var resultArr=[];
		angular.forEach(items, function(item){
		if(item.done==false || showComplete == true){
		resultArr.push(item);}
		}); return resultArr;
		}
	})

	todoApp.controller("ToDoCtrl", function($scope) {
		$scope.todo = model;

		$scope.incompleteCount = function() {
			var count = 0;
			angular.forEach($scope.todo.items, function(item) {
				if (!item.done) {
					count++
				}
			});
			return count;
		};

		$scope.addNewItem = function(actionText) {
			$scope.todo.items.push({
				action : actionText,
				done : false
			});
		}
	});
</script>



</head>

<body ng-controller="ToDoCtrl">
	<!-- One of the purpose of the controller is to provide views with the data they require
You don't always want views to have access to the complete model, so you use the 
controller to explicitly select those portions of the data that are going to be available,
known as the scope
The argument to the controller function is the $scope
Controllers define behaviors on the scope. Behaviors are functions that operate on the 
data in the model to implement the business logic in the app. The behaviors defined by a 
controller support a view to  display data to the user and to update the model based on 
user interactions 


-->

	<h1>
		{{todo.user}}'s To Do List <span ng-hide="incompleteCount()==0">{{incompleteCount()}}</span>
	</h1>
	<input ng-model="actionText"/>
	<button ng-click="addNewItem(actionText)">Add</button>
	<table>
		<thead>
			<tr>
				<th>Description</th>
				<th>Done</th>
			</tr>
		</thead>
		<tbody>
			<tr ng-repeat="item in todo.items | filter: {done:false} | orderBy:'action'">
				<td>{{item.action}}</td>
				<td><input type="checkbox" ng-model="item.done" /></td>
				<td>{{item.done}}</td>
			</tr>
		</tbody>
	</table>

</body>
</html>