-- DEMO DDL SCRIPT 

CREATE TABLE DEMO_CUSTOMERS
(
CUSTOMER_ID NUMBER, 
CUST_FIRST_NAME VARCHAR2(50) NOT NULL, 
CUST_LAST_NAME VARCHAR2(50) NOT NULL, 
CUST_STATE VARCHAR2(2CHAR), 
CREDIT_LIMIT NUMBER (9,2), 
CUST_EMAIL VARCHAR2(100),
PRIMARY KEY(CUSTOMER_ID)
);

CREATE TABLE DEMO_ORDERS
(
ORDER_ID NUMBER PRIMARY KEY, 
CUSTOMER_ID NUMBER ,
ORDER_TOTAL NUMBER(9,2), 
ORDER_TIMESTAMP DATE, 
USER_ID NUMBER,
FOREIGN KEY(CUSTOMER_ID) REFERENCES DEMO_CUSTOMERS(CUSTOMER_ID)
); 

/

SELECT * FROM DEMO_CUSTOMERS; 

CREATE SEQUENCE DC_SEQ -- CREATE SEQUENCE 
START WITH 1
INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER DC_SEQ_TRIGGER -- CREATE TRIGGER
BEFORE INSERT ON DEMO_CUSTOMERS
FOR EACH ROW
BEGIN 
  IF :new.CUSTOMER_ID IS NULL THEN
    SELECT DC_SEQ.NEXTVAL INTO :new.CUSTOMER_ID FROM DUAL; 
  END IF; 
END;
/ 
INSERT INTO DEMO_CUSTOMERS
(cust_first_name, cust_last_name, cust_state, CREDIT_LIMIT, CUST_EMAIL)
VALUES ('THERESA', 'DINH', 'TX', 2000, 'A@EMAIL.COM'); 
/
ALTER TABLE DEMO_CUSTOMERS 
ADD CONSTRAINT UNIQUE_EMAIL
UNIQUE(CUST_EMAIL);
/
SELECT * FROM DEMO_ORDERS
/
CREATE SEQUENCE DO_SEQ
START WITH 1
INCREMENT BY 1; 
/
CREATE OR REPLACE TRIGGER DO_SEQ_TRIGGER
BEFORE INSERT ON DEMO_ORDERS
FOR EACH ROW 
BEGIN 
  IF :new.ORDER_ID IS NULL THEN 
    SELECT DO_SEQ.NEXTVAL INTO :new.ORDER_ID FROM DUAL; 
  END IF;
END; 
/
CREATE OR REPLACE TRIGGER DO_DATE_TRIGGER
BEFORE INSERT ON DEMO_ORDERS
FOR EACH ROW 
BEGIN 
  IF :new.ORDER_TIMESTAMP IS NULL THEN 
    SELECT CURRENT_DATE INTO :NEW.ORDER_TIMESTAMP FROM DUAL; 
  END IF;
END;
/
INSERT INTO DEMO_ORDERS (CUSTOMER_ID, ORDER_TOTAL, USER_ID)
VALUES (1, 25, 1); 
/ 
ALTER TABLE DEMO_ORDERS 
ADD CONSTRAINT EXISTING_CUST_ID
NOT NULL(CUSTOMER_ID);
/
SELECT * FROM DEMO_ORDERS; 
/
CREATE OR REPLACE PROCEDURE CREATE_ORDER(C_ID IN NUMBER, O_T IN NUMBER)
IS 
BEGIN 
INSERT INTO DEMO_ORDERS(CUSTOMER_ID, ORDER_TOTAL)
VALUES(C_ID, O_T); 
COMMIT; 
END CREATE_ORDER; 
/ 
CREATE OR REPLACE PROCEDURE GET_CUSTOMER(C_ID IN NUMBER, CUSTOMER OUT SYS_REFCURSOR)
IS 
BEGIN 
OPEN CUSTOMER FOR 
SELECT * FROM DEMO_CUSTOMERS WHERE CUSTOMER_ID = C_ID; 
END GET_CUSTOMER; 
/ 
ALTER TABLE DEMO_ORDERS
DROP COLUMN USER_ID; 
/
INSERT INTO DEMO_ORDERS(CUSTOMER_ID, ORDER_TOTAL)
VALUES(1, 10000);  
/
INSERT INTO DEMO_CUSTOMERS
(CUST_FIRST_NAME, CUST_LAST_NAME, CUST_STATE, CREDIT_LIMIT, CUST_EMAIL)
VALUES('test', 'test', 'VA', 9000, 'test'); 
/
SELECT * FROM DEMO_ORDERS; 
/
select * from DEMO_CUSTOMERS; 
/
CALL CREATE_ORDER(2, 200.0); 
/
SELECT * FROM DEMO_CUSTOMERS; 
/
CREATE OR REPLACE PROCEDURE CREATE_CUSTOMER
(FN IN VARCHAR2, LN IN VARCHAR2, S IN VARCHAR2, CL IN NUMBER, E IN VARCHAR2)
IS
BEGIN 
INSERT INTO DEMO_CUSTOMERS
(CUST_FIRST_NAME, CUST_LAST_NAME, CUST_STATE, CREDIT_LIMIT, CUST_EMAIL)
VALUES(FN, LN, S, CL, E);
COMMIT;
END CREATE_CUSTOMER;