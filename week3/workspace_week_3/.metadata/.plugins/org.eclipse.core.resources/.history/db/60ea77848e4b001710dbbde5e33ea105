package com.ers.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.bank.util.ConnectionFactory;
import com.ers.pojo.Request;
import com.ers.pojo.User;

public class ImplDao implements Dao{

	static ArrayList<Request> requests = new ArrayList<Request>();
	
	@Override
	public User getUser(String username) {
		User u = new User();
		
		try(Connection connection = ConnectionFactory.getInstance().getConnection();){
			
			String sql = "SELECT * FROM bank_users WHERE user_name = ?";
					
			PreparedStatement ps = connection.prepareStatement(sql);
			ps.setString(1, username);
			
			ResultSet info = ps.executeQuery();
			while(info.next()){ 
				u.setId(info.getInt(1));  
				u.setFn(info.getString(2));
				u.setLn(info.getString(3));
				u.setPassword(info.getString(4));
				u.setUsername(info.getString(5));
				u.setRequests(getUserRequests(u.getId()));
			}
			
			if(u.getUsername() != null){System.out.println("Found a user");} //log.log("Retrieved user by username: " + userName);
			else {
				//log.log("Failed to retrieve user by username: " + userName);
				return null;
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return u;
	}

	@Override
	public User getUser(int id) {
		// TODO Auto-generated method stub
		return null;
	}
	
	public ArrayList<Request> getUserRequests(int id){ 
		requests = new ArrayList<Request>();
		Request temp = new Request();
		
		try(Connection connection = ConnectionFactory.getInstance().getConnection();){
			String sql = "SELECT * FROM requests WHERE empid = ?";
			String sql2 = "SELECT name FROM statetype WHERE stateid = ?";
			
			PreparedStatement ps = connection.prepareStatement(sql);
			ps.setInt(1, id);
			
			PreparedStatement ps2 = connection.prepareStatement(sql2);
			
			ResultSet info = ps.executeQuery();
			int i = 0, num = 0;
			while(info.next()){
				
				temp = new Request();
				temp.setId(info.getInt(1));
				temp.setDateOpened(info.getDate(2));
				temp.setDateClosed(info.getDate(3));
				temp.setBalance(info.getDouble(4));
				temp.setPurpose(info.getString(5));
				temp.setRequesterId(info.getInt(6));
				temp.setAdminId(info.getInt(7));
				
				num = info.getInt(8);
				ps2.setInt(1, num); // setting request state so it can be queried each iteration to
									// collect the correct state type in the look-up table.
				ResultSet info2 = ps2.executeQuery();
				info2.next();
				temp.setType(info2.getString(1));
				
				requests.add(i, temp);
				i++;			
			}
			return requests;
			
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
		}
	}

}
