package com.ex.aop;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

@Component
@Aspect
public class Logs {
	static String filename="src/main/java/com/ex/aop/logs.txt";
	
	@After("execution(String com.ex.repository.CustomerRepositoryImpl.* (..))")
	public void logRepoMethods(){
		LocalDateTime now = LocalDateTime.now();
		write("\nPerforming method!!strings");
	}
	
	@Around("pc()")
	public void doThings(ProceedingJoinPoint pjp){
		System.out.println("starting method");
		try {
			pjp.proceed();
		} catch (Throwable e) {
			e.printStackTrace();
		}
		System.out.println("ending method");
	}
	
	@Pointcut("execution(String com.ex.repository.CustomerRepositoryImpl.* (..))")
	public void pc(){}
	static void write(String message){
		try(BufferedWriter bw = 
				new BufferedWriter(new FileWriter(filename,true));){
			bw.write(message);
		}catch(IOException e){
			e.printStackTrace();
		}
	}
}
