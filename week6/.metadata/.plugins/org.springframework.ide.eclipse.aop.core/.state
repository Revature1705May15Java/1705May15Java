<?xml version="1.0" encoding="UTF-8"?>
<aop-reference-model>
<aop-project name="HelloSpringProject"/>
<aop-project name="classdemo"/>
<aop-project name="ormdemo">
<aspect-definition advice-class-name="org.springframework.transaction.interceptor.TransactionInterceptor" advice-method-name="invoke" advice-method-parameter-types="org.aopalliance.intercept.MethodInvocation" advice-type="AROUND" aspect-end-line-number="10" aspect-name="org.springframework.transaction.interceptor.TransactionInterceptor#ormdemo#src/main/resources/beans.xml#10" aspect-start-line-number="10" factory-id="org.springframework.ide.eclipse.aop.core.javaAdvisorDefinitionElementFactory" file="/ormdemo/src/main/resources/beans.xml" pointcut-expression="(@within(org.springframework.transaction.annotation.Transactional) || @annotation(org.springframework.transaction.annotation.Transactional)) &amp;&amp; execution(* *..*(..))" proxy-target-class="false">
<aop-reference advice-type="AROUND" bean="1:BeansModel|2:ormdemo|3:src/main/resources/beans.xml|7:beans:8|8:myDao:40" bean-file="/ormdemo/src/main/resources/beans.xml" bean-start-line="40" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/ormdemo/src/main/resources/beans.xml" source="=ormdemo/C:\/Users\/aguac\/.m2\/repository\/org\/springframework\/spring-tx\/4.2.5.RELEASE\/spring-tx-4.2.5.RELEASE.jar&lt;org.springframework.transaction.interceptor(TransactionInterceptor.class[TransactionInterceptor~invoke~Lorg.aopalliance.intercept.MethodInvocation;" source-start-line="-1" target="=ormdemo/src\/main\/java&lt;com.ex.dao{DaoImpl.java[DaoImpl~getCaves" target-start-line="35"/>
<aop-reference advice-type="AROUND" bean="1:BeansModel|2:ormdemo|3:src/main/resources/beans.xml|7:beans:8|8:myDao:40" bean-file="/ormdemo/src/main/resources/beans.xml" bean-start-line="40" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/ormdemo/src/main/resources/beans.xml" source="=ormdemo/C:\/Users\/aguac\/.m2\/repository\/org\/springframework\/spring-tx\/4.2.5.RELEASE\/spring-tx-4.2.5.RELEASE.jar&lt;org.springframework.transaction.interceptor(TransactionInterceptor.class[TransactionInterceptor~invoke~Lorg.aopalliance.intercept.MethodInvocation;" source-start-line="-1" target="=ormdemo/src\/main\/java&lt;com.ex.dao{DaoImpl.java[DaoImpl~getBears" target-start-line="25"/>
<aop-reference advice-type="AROUND" bean="1:BeansModel|2:ormdemo|3:src/main/resources/beans.xml|7:beans:8|8:myDao:40" bean-file="/ormdemo/src/main/resources/beans.xml" bean-start-line="40" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/ormdemo/src/main/resources/beans.xml" source="=ormdemo/C:\/Users\/aguac\/.m2\/repository\/org\/springframework\/spring-tx\/4.2.5.RELEASE\/spring-tx-4.2.5.RELEASE.jar&lt;org.springframework.transaction.interceptor(TransactionInterceptor.class[TransactionInterceptor~invoke~Lorg.aopalliance.intercept.MethodInvocation;" source-start-line="-1" target="=ormdemo/src\/main\/java&lt;com.ex.dao{DaoImpl.java[DaoImpl~makeBear~QBear;" target-start-line="46"/>
</aspect-definition>
</aop-project>
<aop-project name="classdemo2">
<aspect-definition advice-class-name="com.ex.aop.Logs" advice-method-name="logRepoMethods" advice-type="AFTER" aspect-end-line-number="20" aspect-name="logs" aspect-start-line-number="20" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/classdemo2/src/main/resources/applicationContext.xml" pointcut-expression="execution(String com.ex.repository.CustomerRepositoryImpl.* (..))" proxy-target-class="false">
<aop-reference advice-type="AFTER" bean="1:BeansModel|2:classdemo2|3:src/main/resources/applicationContext.xml|7:beans:17|8:customerRepository:17" bean-file="/classdemo2/src/main/resources/applicationContext.xml" bean-start-line="17" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/classdemo2/src/main/resources/applicationContext.xml" source="=classdemo2/src\/main\/java&lt;com.ex.aop{Logs.java[Logs~logRepoMethods" source-start-line="23" target="=classdemo2/src\/main\/java&lt;com.ex.repository{CustomerRepositoryImpl.java[CustomerRepositoryImpl~getName" target-start-line="25"/>
</aspect-definition>
<aspect-definition advice-class-name="com.ex.aop.Logs" advice-method-name="doThings(org.aspectj.lang.ProceedingJoinPoint)" advice-type="AROUND" aspect-end-line-number="20" aspect-name="logs" aspect-start-line-number="20" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/classdemo2/src/main/resources/applicationContext.xml" pointcut-expression="pc()" proxy-target-class="false">
<aop-reference advice-type="AROUND" bean="1:BeansModel|2:classdemo2|3:src/main/resources/applicationContext.xml|7:beans:17|8:customerRepository:17" bean-file="/classdemo2/src/main/resources/applicationContext.xml" bean-start-line="17" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/classdemo2/src/main/resources/applicationContext.xml" source="=classdemo2/src\/main\/java&lt;com.ex.aop{Logs.java[Logs~doThings~QProceedingJoinPoint;" source-start-line="29" target="=classdemo2/src\/main\/java&lt;com.ex.repository{CustomerRepositoryImpl.java[CustomerRepositoryImpl~getName" target-start-line="25"/>
</aspect-definition>
</aop-project>
<aop-project name="SpringMVCExample"/>
</aop-reference-model>